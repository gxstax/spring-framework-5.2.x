pluginManagement {
	repositories {
		gradlePluginPortal()
		maven { url 'https://repo.spring.io/plugins-release' }
	}
}
apply from: "$rootDir/gradle/build-cache-settings.gradle"

include "spring-aop"
include "spring-aspects"
include "spring-beans"
include "spring-context"
include "spring-context-support"
include "spring-context-indexer"
include "spring-core"
include "kotlin-coroutines"
project(':kotlin-coroutines').projectDir = file('spring-core/kotlin-coroutines')
include "spring-expression"
include "spring-instrument"
include "spring-jcl"
include "spring-jdbc"
include "spring-jms"
include "spring-messaging"
include "spring-orm"
include "spring-oxm"
include "spring-test"
include "spring-tx"
include "spring-web"
include "spring-webmvc"
include "spring-webflux"
include "spring-websocket"
include "framework-bom"
include "integration-tests"


rootProject.name = "spring"
rootProject.children.each {project ->
	project.buildFileName = "${project.name}.gradle"
}
include 'thinking-in-spring'
include 'thinking-in-spring:spring-bean'
findProject(':thinking-in-spring:spring-bean')?.name = 'spring-bean'
include 'thinking-in-spring:ioc-container-overview'
findProject(':thinking-in-spring:ioc-container-overview')?.name = 'ioc-container-overview'
include 'thinking-in-spring:dependency-lookup'
findProject(':thinking-in-spring:dependency-lookup')?.name = 'dependency-lookup'
include 'thinking-in-spring:dependency-injection'
findProject(':thinking-in-spring:dependency-injection')?.name = 'dependency-injection'
include 'thinking-in-spring:dependency-source'
findProject(':thinking-in-spring:dependency-source')?.name = 'dependency-source'
include 'thinking-in-spring:bean-scope'
findProject(':thinking-in-spring:bean-scope')?.name = 'bean-scope'
include 'thinking-in-spring:bean-lifecycle'
findProject(':thinking-in-spring:bean-lifecycle')?.name = 'bean-lifecycle'
include 'thinking-in-spring:configuration-metadata'
findProject(':thinking-in-spring:configuration-metadata')?.name = 'configuration-metadata'
include 'thinking-in-spring:resource'
findProject(':thinking-in-spring:resource')?.name = 'resource'

